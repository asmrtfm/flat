#!/usr/bin/env bash

#
#
# LOCALITY OF PURPOSE
# # #

[[ "${1,,}" != +(\-)@(h)?(elp) ]] || { cat <<'EOL'
USAGE:
	[ <io> | ]  flat  [-n]  [<files...>]
SYNOPSIS:
	Vertically oriented code, while perhaps to some, is more readable,
	is more tedious to parse with traditional command line utilities.
	This is because no single line contains enough context to infer anything meaningful otf.
	This scipt removes unecessary line breaks, and if invoked with the `-n` flag
	will prefix the flattened lines with the original line numbers as a range.
	It works well with dart/flutter, js, and theoretically any language
	with similar syntax for newlines and comments.

EOL
	exit 0
}

# strip comments while injecting line number prefixes
stripCount() {
	CENSORED=false
	local -i i=0
	while ((++i)); read bloat; do
		case "${bloat//[[:space:]]/}" in
		*'//'*) [[ "${bloat%%'//'*}" != *[[:alnum:]]* ]] || echo "($i) ${bloat%%'//'*}" ;;
		*'/*'*'*/'*) [[ "${bloat/'/*'*'*/'/}" != *[[:alnum:]]* ]] || echo "($i) ${bloat/'/*'*'*/'/}" ;;
		*'/*'*) CENSORED=true; [[ "${bloat%%'/*'*}" != *[[:alnum:]]* ]] || echo "($i) ${bloat%%'/*'*}" ;;
		*'*/'*) CENSORED=false ;;
		*) ${CENSORED} || echo "($i) $bloat"
		esac
	done < <(cat - )
}

flattener() { sed ':a;N;$!ba;s/;\n/;/g' ${1:-} | tr -d '\n' | sed 's/;/;\n/g;s/}/}\n/g'; printf '\n'; }

reconstruction() {
	local -ai N
	while read line; do
		# extract the injected line numbers from the line
		N=($(echo "$line" | grep -oE '(\([0-9]+\))' | tr -d [\(\)]))
		# prefix the flattened line with the orginal line number or range of line numbers
		if ((${#N[@]} > 1)); then
			echo "(${N[0]}:${N[-1]}): $(echo "$line" | sed 's/([0-9]*)//g')"
		else
			echo "(${N[0]}): $(echo "$line" | sed 's/([0-9]*)//g')"
		fi
	done < <(cat - )
}

flatten() { stripCount | flattener | reconstruction ; }
flatter() { flatten | cut -d\  -f2- ; }
[[ "${1,,}" != +(\-)@(n) ]] && Action=flatter || Action=flatten
[ -t 0 ] || { cat - | ${Action} ; }
for((a=1;a<=$#;a++)){ [[ ! -e "${!a}" || -d "$(realpath "${!a}")" ]] || { cat "${!a}" | ${Action} | tee ".${!a}.flat" ; }; }
